-- Darks GUI Library
local Darks = {}
Darks.__index = Darks

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- ðŸ”¹ Utility Notifikasi
local function CreateNotification(screen, text)
    local Notif = Instance.new("TextLabel")
    Notif.Size = UDim2.new(0, 250, 0, 40)
    Notif.Position = UDim2.new(1, -270, 1, -60)
    Notif.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    Notif.Text = text
    Notif.Font = Enum.Font.GothamBold
    Notif.TextSize = 14
    Notif.TextColor3 = Color3.fromRGB(255, 255, 255)
    Notif.BackgroundTransparency = 0
    Notif.Parent = screen
    Instance.new("UICorner", Notif).CornerRadius = UDim.new(0, 6)

    local tweenIn = TweenService:Create(Notif, TweenInfo.new(0.3), {Position = UDim2.new(1, -270, 1, -110)})
    tweenIn:Play()
    task.wait(2)
    local tweenOut = TweenService:Create(Notif, TweenInfo.new(0.3), {Position = UDim2.new(1, 20, 1, -110)})
    tweenOut:Play()
    tweenOut.Completed:Wait()
    Notif:Destroy()
end

-- ðŸ”¹ Window
function Darks:CreateWindow(config)
    local self = setmetatable({}, Darks)

    local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    ScreenGui.Name = "DarksGUI"
    ScreenGui.ResetOnSpawn = false
    self.ScreenGui = ScreenGui

    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = config.Size or UDim2.new(0, 500, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui
    Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 8)
    self.MainFrame = MainFrame

    -- Topbar
    local Topbar = Instance.new("Frame", MainFrame)
    Topbar.Size = UDim2.new(1, 0, 0, 30)
    Topbar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Topbar.BorderSizePixel = 0
    Instance.new("UICorner", Topbar).CornerRadius = UDim.new(0, 8)

    local Title = Instance.new("TextLabel", Topbar)
    Title.Text = config.Title or "Darks GUI"
    Title.Size = UDim2.new(1, -70, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Color3.fromRGB(255, 70, 100)
    Title.TextSize = 14
    Title.BackgroundTransparency = 1
    Title.TextXAlignment = Enum.TextXAlignment.Left

    -- Minimize
    local MinBtn = Instance.new("TextButton", Topbar)
    MinBtn.Size = UDim2.new(0, 30, 0, 30)
    MinBtn.Position = UDim2.new(1, -60, 0, 0)
    MinBtn.Text = "_"
    MinBtn.TextSize = 18
    MinBtn.Font = Enum.Font.GothamBold
    MinBtn.BackgroundTransparency = 1
    MinBtn.TextColor3 = Color3.fromRGB(255, 255, 255)

    -- Close
    local CloseBtn = Instance.new("TextButton", Topbar)
    CloseBtn.Size = UDim2.new(0, 30, 0, 30)
    CloseBtn.Position = UDim2.new(1, -30, 0, 0)
    CloseBtn.Text = "X"
    CloseBtn.TextSize = 18
    CloseBtn.Font = Enum.Font.GothamBold
    CloseBtn.BackgroundTransparency = 1
    CloseBtn.TextColor3 = Color3.fromRGB(255, 70, 100)

    -- Sidebar
    local Sidebar = Instance.new("Frame", MainFrame)
    Sidebar.Size = UDim2.new(0, 130, 1, -30)
    Sidebar.Position = UDim2.new(0, 0, 0, 30)
    Sidebar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Sidebar.BorderSizePixel = 0

    local SideLayout = Instance.new("UIListLayout", Sidebar)
    SideLayout.SortOrder = Enum.SortOrder.LayoutOrder
    SideLayout.Padding = UDim.new(0, 5)

    -- Content
    local ContentFrame = Instance.new("Frame", MainFrame)
    ContentFrame.Size = UDim2.new(1, -130, 1, -30)
    ContentFrame.Position = UDim2.new(0, 130, 0, 30)
    ContentFrame.BackgroundTransparency = 1

    self.Sidebar = Sidebar
    self.ContentFrame = ContentFrame
    self.Tabs = {}

    -- Minimize & Close
    local Minimized = false
    local normalSize = MainFrame.Size
    local minimizedSize = UDim2.new(0, normalSize.X.Offset, 0, 30)

    MinBtn.MouseButton1Click:Connect(function()
        Minimized = not Minimized
        local goalSize = Minimized and minimizedSize or normalSize
        TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad), {Size = goalSize}):Play()
        Sidebar.Visible = not Minimized
        ContentFrame.Visible = not Minimized
    end)

    CloseBtn.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)

    return self
end

-- ðŸ”¹ Tab
function Darks:CreateTab(name)
    local Tab = {}

    local Button = Instance.new("TextButton", self.Sidebar)
    Button.Size = UDim2.new(1, 0, 0, 35)
    Button.Text = name
    Button.Font = Enum.Font.GothamBold
    Button.TextColor3 = Color3.fromRGB(200, 200, 200)
    Button.BackgroundTransparency = 1
    Button.TextSize = 14

    local TabContent = Instance.new("Frame", self.ContentFrame)
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = false

    local Layout = Instance.new("UIListLayout", TabContent)
    Layout.SortOrder = Enum.SortOrder.LayoutOrder
    Layout.Padding = UDim.new(0, 10)

    local Padding = Instance.new("UIPadding", TabContent)
    Padding.PaddingLeft = UDim.new(0, 15)
    Padding.PaddingTop = UDim.new(0, 15)
    Padding.PaddingRight = UDim.new(0, 15)

    Button.MouseButton1Click:Connect(function()
        for _, t in pairs(self.Tabs) do
            t.Content.Visible = false
            t.Button.TextColor3 = Color3.fromRGB(200, 200, 200)
        end
        TabContent.Visible = true
        Button.TextColor3 = Color3.fromRGB(255, 70, 100)
    end)

    Tab.Button = Button
    Tab.Content = TabContent

    -- Components
    function Tab:CreateLabel(text)
        local Label = Instance.new("TextLabel", TabContent)
        Label.Text = text
        Label.Size = UDim2.new(1, 0, 0, 25)
        Label.Font = Enum.Font.Gotham
        Label.TextColor3 = Color3.fromRGB(220, 220, 220)
        Label.BackgroundTransparency = 1
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left
        return Label
    end

    function Tab:CreateButton(text, callback)
        local Btn = Instance.new("TextButton", TabContent)
        Btn.Text = text
        Btn.Size = UDim2.new(1, 0, 0, 30)
        Btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        Btn.Font = Enum.Font.GothamBold
        Btn.TextSize = 14
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)

        Btn.MouseButton1Click:Connect(function()
            pcall(callback)
            CreateNotification(self.ScreenGui, text .. " clicked!")
        end)
        return Btn
    end

    function Tab:CreateToggle(text, default, callback)
        local Frame = Instance.new("Frame", TabContent)
        Frame.Size = UDim2.new(1, 0, 0, 30)
        Frame.BackgroundTransparency = 1

        local Label = Instance.new("TextLabel", Frame)
        Label.Text = text
        Label.Size = UDim2.new(0.7, 0, 1, 0)
        Label.Font = Enum.Font.Gotham
        Label.TextColor3 = Color3.fromRGB(220, 220, 220)
        Label.BackgroundTransparency = 1
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left

        local ToggleBtn = Instance.new("TextButton", Frame)
        ToggleBtn.Size = UDim2.new(0, 40, 0, 20)
        ToggleBtn.Position = UDim2.new(1, -50, 0.5, -10)
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        ToggleBtn.Text = ""
        Instance.new("UICorner", ToggleBtn).CornerRadius = UDim.new(1, 0)

        local Indicator = Instance.new("Frame", ToggleBtn)
        Indicator.Size = UDim2.new(0, 18, 0, 18)
        Indicator.Position = UDim2.new(0, 1, 0.5, -9)
        Indicator.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
        Instance.new("UICorner", Indicator).CornerRadius = UDim.new(1, 0)

        local State = default or false
        local function Refresh()
            if State then
                ToggleBtn.BackgroundColor3 = Color3.fromRGB(100, 60, 200)
                Indicator.Position = UDim2.new(1, -19, 0.5, -9)
            else
                ToggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                Indicator.Position = UDim2.new(0, 1, 0.5, -9)
            end
        end
        Refresh()

        ToggleBtn.MouseButton1Click:Connect(function()
            State = not State
            Refresh()
            pcall(callback, State)
            CreateNotification(self.ScreenGui, text .. ": " .. tostring(State))
        end)

        return Frame
    end

function tab:AddSlider(sliderName, minValue, maxValue, defaultValue, callback)
    table.insert(tab.Components, {
        Type = "Slider",
        Name = sliderName,
        Min = minValue,
        Max = maxValue,
        Value = defaultValue or minValue,
        Callback = callback
    })
end

    function Tab:CreateInput(placeholder, default, callback)
        local Box = Instance.new("TextBox", TabContent)
        Box.PlaceholderText = placeholder or "Enter text..."
        Box.Text = default or ""
        Box.Size = UDim2.new(1, 0, 0, 30)
        Box.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Box.TextColor3 = Color3.fromRGB(255, 255, 255)
        Box.Font = Enum.Font.Gotham
        Box.TextSize = 14
        Instance.new("UICorner", Box).CornerRadius = UDim.new(0, 6)

        Box.FocusLost:Connect(function()
            pcall(callback, Box.Text)
            CreateNotification(self.ScreenGui, "Input: " .. Box.Text)
        end)

        return Box
    end

    self.Tabs[name] = Tab
    return Tab
end

return Darks
